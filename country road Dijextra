#include<bits/stdc++.h>
using namespace std;
#define ll   long long
#define pb   push_back
#define yes   cout<<"YES"<<endl
#define no   cout<<"NO"<<endl
#define all(x) (x).begin(), (x).end()
#define    gcd(a,b)      __gcd(a,b)
#define    lcm(a,b)  (a*b)/__gcd(a,b)
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);

const ll inf=1e18; 
const ll mx=512; 
ll dist[mx]; 
vector<pair<ll,ll>>adj[mx]; 

void dijextra(ll s, ll n)
{
     for(ll i=0; i<n; i++)dist[i]=inf; 
     dist[s]=0;
      priority_queue<pair<ll,ll>, vector<pair<ll,ll>>, greater<pair<ll,ll>>>pq;
      pq.push({0,s});

      while(!pq.empty())
      {
        ll node=pq.top().second; 
        ll cost=pq.top().first; 
        pq.pop(); 
        if(dist[node]<cost)continue; 

        for(auto e:adj[node])
        {
            ll v=e.first; 
            ll w=e.second; 
            ll mxa=max( cost, w ); 
            if(mxa<dist[v])
            {
                dist[v]=mxa;
                pq.push({mxa,v});
            }
        }
      }
}

void solve(){

    ll n,m; 
    cin>>n>>m;
    for(ll i=0; i<n; i++)adj[i].clear(); 
    for(ll i=1; i<=m; i++)
    {
        ll u,v,w; 
        cin>>u>>v>>w; 
        adj[u].pb({v,w}); 
        adj[v].pb({u,w}); 

    }

    ll tink; cin>>tink;
     dijextra(tink,n);
     for(ll i=0; i<n; i++)
     {
        if(dist[i]==inf)cout<<"Impossible"<<endl;
        else cout<<dist[i]<<endl;
     }






}

int main()
{
    optimize();
    ll t;
    cin>>t;
    for(ll tc=1; tc<=t; tc++)
    {
        cout<<"Case "<<tc<<": "<<endl; 
        solve();
    }
}
/*****************  ALHAMDULILLAH  *****************/
